#!/usr/bin/env bash

usage() {
    list=`echo $(jf c s | grep "Server ID:" | awk '{print $3}') | sed "s/ /, /g"`
    echo "Usage: `basename $0` -s <server_id> ($list) [-p <project>] -r <repo_name> <build_name> <build_number>"
    exit 0
}

### Main
project=""

OPTIND=1 # Reset in case getopts has been used previously in the shell.
while getopts "h?s:p:r:" opt; do
    case "$opt" in
    h|\?)
        usage
        ;;
    s)  server_id=$OPTARG
        ;;
    p)  project=$OPTARG
        ;;
    r)  repo_name=$OPTARG
        ;;
    esac
done
shift $((OPTIND-1))
[ "$1" = "--" ] && shift

build_name=$1
build_number=$2

if [ -z "$server_id" ] || [ -z "$repo_name" ] || [ -z "$build_name" ] || [ -z "$build_number" ]; then
    usage
fi

if [ "$project" != "" ]; then
    repo_name="${project}-${repo_name}"
fi

printf "build & deploy with\n"
printf '  server_id: "%s"\n' ${server_id}
printf '  project: "%s"\n' ${project}
printf '  repo_name: "%s"\n' ${repo_name}
printf '  build_name: "%s"\n' ${build_name}
printf '  build_number: "%s"\n' ${build_number}
printf '\n'


`dirname $0`/jf-gradle-clean
jf gradlec --repo-deploy=${repo_name} --repo-resolve=${repo_name} --server-id-deploy=${server_id} --server-id-resolve=${server_id}
if [ "$project" == "" ]; then
    jf gradle --info clean artifactoryPublish --build-name=${build_name} --build-number=${build_number}
    jf rt bce ${build_name} ${build_number}
    jf rt bag ${build_name} ${build_number}
    jf rt bp ${build_name} ${build_number}
else
    # jf gradle --info --refresh-dependencies --no-build-cache clean artifactoryPublish --project=${project} --build-name=${build_name} --build-number=${build_number}
    jf gradle --info clean artifactoryPublish --project=${project} --build-name=${build_name} --build-number=${build_number}
    jf rt bce --project=${project} ${build_name} ${build_number}
    jf rt bag --project=${project} ${build_name} ${build_number}
    jf rt bp --project=${project} ${build_name} ${build_number}
fi
